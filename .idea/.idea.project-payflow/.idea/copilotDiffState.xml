<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/.dockerignore">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.dockerignore" />
              <option name="updatedContent" value="# Node.js dependencies&#10;**/node_modules&#10;**/npm-debug.log&#10;**/yarn-debug.log&#10;**/yarn-error.log&#10;**/pnpm-debug.log&#10;&#10;# .NET build output&#10;**/bin&#10;**/obj&#10;&#10;# Development files&#10;**/.git&#10;**/.vs&#10;**/.vscode&#10;**/.idea&#10;&#10;# Misc&#10;**/.DS_Store&#10;**/.env.local&#10;**/.env.development.local&#10;**/.env.test.local&#10;**/.env.production.local" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Dockerfile">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Dockerfile" />
              <option name="originalContent" value="FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base&#10;WORKDIR /app&#10;EXPOSE 80&#10;EXPOSE 443&#10;ENV ASPNETCORE_ENVIRONMENT=Development&#10;ENV ASPNETCORE_URLS=http://+:80;https://+:443&#10;&#10;FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build&#10;WORKDIR /src&#10;COPY [&quot;project-payflow-backend.csproj&quot;, &quot;./&quot;]&#10;RUN dotnet restore &quot;project-payflow-backend.csproj&quot;&#10;COPY . .&#10;RUN dotnet build &quot;project-payflow-backend.csproj&quot; -c Release -o /app/build&#10;&#10;FROM build AS publish&#10;RUN dotnet publish &quot;project-payflow-backend.csproj&quot; -c Release -o /app/publish&#10;&#10;FROM base AS final&#10;WORKDIR /app&#10;COPY --from=publish /app/publish .&#10;ENTRYPOINT [&quot;dotnet&quot;, &quot;project-payflow-backend.dll&quot;]&#10;" />
              <option name="updatedContent" value="FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base&#10;WORKDIR /app&#10;EXPOSE 80&#10;ENV ASPNETCORE_ENVIRONMENT=Development&#10;ENV ASPNETCORE_URLS=http://+:80&#10;# Disabled HTTPS for Docker container to avoid certificate issues&#10;ENV ASPNETCORE_HTTP_PORTS=80&#10;&#10;FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build&#10;WORKDIR /src&#10;COPY [&quot;project-payflow-backend.csproj&quot;, &quot;./&quot;]&#10;RUN dotnet restore &quot;project-payflow-backend.csproj&quot;&#10;COPY . .&#10;RUN dotnet build &quot;project-payflow-backend.csproj&quot; -c Release -o /app/build&#10;&#10;FROM build AS publish&#10;RUN dotnet publish &quot;project-payflow-backend.csproj&quot; -c Release -o /app/publish&#10;&#10;FROM base AS final&#10;WORKDIR /app&#10;COPY --from=publish /app/publish .&#10;ENTRYPOINT [&quot;dotnet&quot;, &quot;project-payflow-backend.dll&quot;]" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/SETUP_INSTRUCTIONS.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/SETUP_INSTRUCTIONS.md" />
              <option name="updatedContent" value="# Project PayFlow Setup Instructions&#10;&#10;This document provides comprehensive instructions for setting up and running the Project PayFlow application using XAMPP for the database, and handling Entity Framework Core migrations.&#10;&#10;## Prerequisites&#10;&#10;- [XAMPP](https://www.apachefriends.org/download.html) (latest version)&#10;- [.NET 9.0 SDK](https://dotnet.microsoft.com/download/dotnet/9.0)&#10;- [Visual Studio](https://visualstudio.microsoft.com/) or [Visual Studio Code](https://code.visualstudio.com/) (optional)&#10;&#10;## Step 1: Set Up XAMPP and MySQL&#10;&#10;1. **Install XAMPP**:&#10;   - Download and install XAMPP from the [official website](https://www.apachefriends.org/download.html).&#10;   - Make sure to include MySQL in your installation.&#10;&#10;2. **Start XAMPP Services**:&#10;   - Open the XAMPP Control Panel.&#10;   - Start both Apache and MySQL services by clicking the &quot;Start&quot; buttons next to them.&#10;&#10;3. **Access phpMyAdmin**:&#10;   - Open your web browser and go to `http://localhost/phpmyadmin/`.&#10;   - Login with username `root` and no password (default XAMPP configuration).&#10;&#10;4. **Create a New Database**:&#10;   - Click on &quot;Databases&quot; in the top menu.&#10;   - Enter `payflow` in the &quot;Create database&quot; field.&#10;   - Click &quot;Create&quot; to create the database.&#10;&#10;## Step 2: Configure the Project&#10;&#10;1. **Verify Connection String**:&#10;   - Open the `appsettings.json` file in the project root.&#10;   - Ensure your connection string is correctly configured:&#10;     ```json&#10;     &quot;ConnectionStrings&quot;: {&#10;       &quot;DefaultConnection&quot;: &quot;Host=localhost;Port=3306;Database=payflow;User=root;Password=;&quot;&#10;     }&#10;     ```&#10;   - If XAMPP MySQL is using a different port or if you set a password, update accordingly.&#10;&#10;2. **Install Required .NET Tools** (if not already installed):&#10;   - Open a command prompt or terminal.&#10;   - Install the Entity Framework Core tools with:&#10;     ```bash&#10;     dotnet tool install --global dotnet-ef&#10;     ```&#10;   - If already installed, you can update with:&#10;     ```bash&#10;     dotnet tool update --global dotnet-ef&#10;     ```&#10;&#10;## Step 3: Apply Database Migrations&#10;&#10;1. **Navigate to Project Directory**:&#10;   - Open a command prompt or terminal.&#10;   - Change to your project directory:&#10;     ```bash&#10;     cd D:\work-dev\project-payflow&#10;     ```&#10;&#10;2. **Apply Existing Migrations**:&#10;   - Run the following command to apply all existing migrations to your database:&#10;     ```bash&#10;     dotnet ef database update&#10;     ```&#10;   - This will create all the necessary tables in your `payflow` database.&#10;&#10;3. **Verify Migration Success**:&#10;   - Check phpMyAdmin to confirm that the tables have been created in your `payflow` database.&#10;   - You should see tables for `Employees`, `Payrolls`, `PayrollReceipts`, and others, as well as a `__EFMigrationsHistory` table.&#10;&#10;## Step 4: Run the Application&#10;&#10;1. **Build and Run the Project**:&#10;   - In the project directory, run:&#10;     ```bash&#10;     dotnet build&#10;     dotnet run&#10;     ```&#10;   - The application will start and tell you which URLs it's listening on (typically `http://localhost:5000` and `https://localhost:5001`).&#10;&#10;2. **Access the API**:&#10;   - Open your browser and navigate to `https://localhost:5001/swagger` or the URL shown in your terminal.&#10;   - You should see the Swagger UI with all available API endpoints.&#10;&#10;## Step 5: Making and Applying Schema Changes&#10;&#10;If you need to update your database schema, follow these steps:&#10;&#10;1. **Make Model Changes**:&#10;   - Modify your model classes in the `Model` folder as needed.&#10;   - For example, add new properties to existing entities or create new entity classes.&#10;&#10;2. **Create a New Migration**:&#10;   - After making changes to your models, run:&#10;     ```bash&#10;     dotnet ef migrations add [MigrationName]&#10;     ```&#10;   - Replace `[MigrationName]` with a descriptive name for your changes (e.g., `AddEmployeeAddress`).&#10;   - This will create new migration files in the `Migrations` folder.&#10;&#10;3. **Apply the New Migration**:&#10;   - Run the following command to update your database:&#10;     ```bash&#10;     dotnet ef database update&#10;     ```&#10;   - This applies any pending migrations to your database.&#10;&#10;4. **Revert a Migration** (if needed):&#10;   - To roll back to a specific migration:&#10;     ```bash&#10;     dotnet ef database update [MigrationName]&#10;     ```&#10;   - Replace `[MigrationName]` with the name of the migration you want to revert to.&#10;   - To completely revert all migrations:&#10;     ```bash&#10;     dotnet ef database update 0&#10;     ```&#10;&#10;## Step 6: Developing the Frontend&#10;&#10;If you're using the included React frontend in the `project-payflow-frontend` directory:&#10;&#10;1. **Navigate to Frontend Directory**:&#10;   ```bash&#10;   cd D:\work-dev\project-payflow\project-payflow-frontend\apps\web&#10;   ```&#10;&#10;2. **Install Dependencies**:&#10;   ```bash&#10;   pnpm install&#10;   ```&#10;&#10;3. **Start Development Server**:&#10;   ```bash&#10;   pnpm dev&#10;   ```&#10;   This will start the frontend on `http://localhost:5173` which is already configured in CORS settings in the backend.&#10;&#10;## Troubleshooting&#10;&#10;### Database Connection Issues&#10;&#10;1. **Check XAMPP Services**:&#10;   - Ensure both Apache and MySQL services are running in the XAMPP Control Panel.&#10;&#10;2. **Verify Port Settings**:&#10;   - Check if MySQL is running on the default port 3306. If not, update your connection string.&#10;   - Run this SQL in phpMyAdmin to check the port: `SHOW VARIABLES WHERE Variable_name = 'port';`&#10;&#10;3. **Connection Refused**:&#10;   - If you get a connection refused error, ensure MySQL is running and that there are no firewall issues.&#10;&#10;### Migration Errors&#10;&#10;1. **Cannot access the database**:&#10;   - Check if your MySQL service is running.&#10;   - Verify that the database `payflow` exists.&#10;   - Confirm that the connection string in `appsettings.json` is correct.&#10;&#10;2. **Migration pending error when running the application**:&#10;   - Run `dotnet ef database update` to apply all pending migrations.&#10;&#10;3. **Conflicting migrations**:&#10;   - If you have conflicts between local changes and existing migrations, you may need to remove the last migration:&#10;     ```bash&#10;     dotnet ef migrations remove&#10;     ```&#10;&#10;## Additional Resources&#10;&#10;- [Entity Framework Core Documentation](https://docs.microsoft.com/en-us/ef/core/)&#10;- [XAMPP Documentation](https://www.apachefriends.org/docs/)&#10;- [.NET CLI Documentation](https://docs.microsoft.com/en-us/dotnet/core/tools/)&#10;&#10;## Backup and Restore&#10;&#10;It's good practice to regularly backup your database:&#10;&#10;1. **Export Database**:&#10;   - In phpMyAdmin, select your `payflow` database.&#10;   - Click the &quot;Export&quot; tab at the top.&#10;   - Choose &quot;Quick&quot; export method and SQL format.&#10;   - Click &quot;Go&quot; to download the SQL dump file.&#10;&#10;2. **Import Database**:&#10;   - In phpMyAdmin, create or select your database.&#10;   - Click the &quot;Import&quot; tab at the top.&#10;   - Choose your SQL dump file and click &quot;Go&quot;." />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/docker-compose.yaml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/docker-compose.yaml" />
              <option name="originalContent" value="version: '3.8'&#10;&#10;services:&#10;  app:&#10;    build:&#10;      context: .&#10;      dockerfile: Dockerfile&#10;    ports:&#10;      - &quot;8080:80&quot;&#10;      - &quot;8443:443&quot;&#10;    environment:&#10;      - ASPNETCORE_ENVIRONMENT=Development&#10;      - ConnectionStrings__DefaultConnection=Server=db;Port=3306;Database=payflow;User=root;Password=payflowpassword&#10;    depends_on:&#10;      - db&#10;    restart: unless-stopped&#10;&#10;  db:&#10;    image: mysql:8.0&#10;    ports:&#10;      - &quot;3306:3306&quot;&#10;    environment:&#10;      - MYSQL_DATABASE=payflow&#10;      - MYSQL_ROOT_PASSWORD=payflowpassword&#10;      - MYSQL_USER=payflow_user&#10;      - MYSQL_PASSWORD=payflowpassword&#10;    volumes:&#10;      - mysql-data:/var/lib/mysql&#10;    restart: unless-stopped&#10;&#10;  phpmyadmin:&#10;    image: phpmyadmin/phpmyadmin&#10;    ports:&#10;      - &quot;8081:80&quot;&#10;    environment:&#10;      - PMA_HOST=db&#10;      - PMA_PORT=3306&#10;    depends_on:&#10;      - db&#10;    restart: unless-stopped&#10;&#10;volumes:&#10;  mysql-data:&#10;" />
              <option name="updatedContent" value="version: '3.8'&#10;&#10;services:&#10;  app:&#10;    build:&#10;      context: .&#10;      dockerfile: Dockerfile&#10;    ports:&#10;      - &quot;8080:80&quot;&#10;    environment:&#10;      - ASPNETCORE_ENVIRONMENT=Development&#10;      - ConnectionStrings__DefaultConnection=Server=db;Port=3306;Database=payflow;User=root;Password=payflowpassword&#10;    depends_on:&#10;      - db&#10;    restart: unless-stopped&#10;&#10;  db:&#10;    image: mysql:8.0&#10;    ports:&#10;      - &quot;3306:3306&quot;&#10;    environment:&#10;      - MYSQL_DATABASE=payflow&#10;      - MYSQL_ROOT_PASSWORD=payflowpassword&#10;      - MYSQL_USER=payflow_user&#10;      - MYSQL_PASSWORD=payflowpassword&#10;    volumes:&#10;      - mysql-data:/var/lib/mysql&#10;    restart: unless-stopped&#10;&#10;  phpmyadmin:&#10;    image: phpmyadmin/phpmyadmin&#10;    ports:&#10;      - &quot;8081:80&quot;&#10;    environment:&#10;      - PMA_HOST=db&#10;      - PMA_PORT=3306&#10;    depends_on:&#10;      - db&#10;    restart: unless-stopped&#10;&#10;volumes:&#10;  mysql-data:" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>