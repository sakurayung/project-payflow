/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TransactionHistoryRouteImport } from './routes/transaction-history'
import { Route as PayrollRouteImport } from './routes/payroll'
import { Route as EmployeesRecordsRouteImport } from './routes/employees-records'
import { Route as IndexRouteImport } from './routes/index'

const TransactionHistoryRoute = TransactionHistoryRouteImport.update({
  id: '/transaction-history',
  path: '/transaction-history',
  getParentRoute: () => rootRouteImport,
} as any)
const PayrollRoute = PayrollRouteImport.update({
  id: '/payroll',
  path: '/payroll',
  getParentRoute: () => rootRouteImport,
} as any)
const EmployeesRecordsRoute = EmployeesRecordsRouteImport.update({
  id: '/employees-records',
  path: '/employees-records',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/employees-records': typeof EmployeesRecordsRoute
  '/payroll': typeof PayrollRoute
  '/transaction-history': typeof TransactionHistoryRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/employees-records': typeof EmployeesRecordsRoute
  '/payroll': typeof PayrollRoute
  '/transaction-history': typeof TransactionHistoryRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/employees-records': typeof EmployeesRecordsRoute
  '/payroll': typeof PayrollRoute
  '/transaction-history': typeof TransactionHistoryRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/employees-records' | '/payroll' | '/transaction-history'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/employees-records' | '/payroll' | '/transaction-history'
  id:
    | '__root__'
    | '/'
    | '/employees-records'
    | '/payroll'
    | '/transaction-history'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EmployeesRecordsRoute: typeof EmployeesRecordsRoute
  PayrollRoute: typeof PayrollRoute
  TransactionHistoryRoute: typeof TransactionHistoryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/transaction-history': {
      id: '/transaction-history'
      path: '/transaction-history'
      fullPath: '/transaction-history'
      preLoaderRoute: typeof TransactionHistoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/payroll': {
      id: '/payroll'
      path: '/payroll'
      fullPath: '/payroll'
      preLoaderRoute: typeof PayrollRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/employees-records': {
      id: '/employees-records'
      path: '/employees-records'
      fullPath: '/employees-records'
      preLoaderRoute: typeof EmployeesRecordsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EmployeesRecordsRoute: EmployeesRecordsRoute,
  PayrollRoute: PayrollRoute,
  TransactionHistoryRoute: TransactionHistoryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
